name: ASP.NET Core Validation Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-files:
    name: Validate ASP.NET and JSON files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Validate ASP.NET project files
      run: |
        echo "Checking ASP.NET project files..."
        # Поиск всех .csproj файлов и проверка их валидности
        find . -name "*.csproj" -type f | while read project_file; do
          echo "Validating $project_file"
          dotnet build "$project_file" --no-restore --verbosity minimal
          if [ $? -ne 0 ]; then
            echo "❌ Error in $project_file"
            exit 1
          fi
        done
        
    - name: Validate JSON files
      run: |
        echo "Checking JSON files..."
        # Поиск всех JSON файлов и проверка их валидности
        find . -name "*.json" -type f | while read json_file; do
          echo "Validating $json_file"
          if python -m json.tool "$json_file" > /dev/null 2>&1; then
            echo "✅ $json_file is valid"
          else
            echo "❌ $json_file contains invalid JSON"
            python -m json.tool "$json_file" 2>&1 || exit 1
          fi
        done
        
    - name: Validate solution file (if exists)
      run: |
        echo "Checking solution file..."
        # Поиск .sln файла и проверка решения
        sln_files=$(find . -name "*.sln" -type f | head -1)
        if [ -n "$sln_files" ]; then
          echo "Found solution file: $sln_files"
          dotnet build "$sln_files" --verbosity minimal
          if [ $? -ne 0 ]; then
            echo "❌ Error in solution file"
            exit 1
          fi
        else
          echo "No solution file found, skipping..."
        fi

  test-project:
    name: Run tests (if any)
    runs-on: ubuntu-latest
    needs: validate-files
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Run tests
      run: |
        # Поиск и запуск тестовых проектов
        find . -name "*Tests.csproj" -o -name "*.Test.csproj" | while read test_project; do
          echo "Running tests for $test_project"
          dotnet test "$test_project" --verbosity normal --logger "trx;LogFileName=test_results.trx"
        done
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: "**/*.trx"